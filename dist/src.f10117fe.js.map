{"version":3,"sources":["src/models/user.ts","src/index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,ADMA,ICNM,ADMN,ICNU,ADMV,GCNa,ADMb,ICNiB,MAAA,CAAA,EDMjB,ECNqB,CAAC,SDMtB;ECNwB,ADStB,ICT0B,EAAE,GDS5B,IAAA,CCToC,ADShB,IAAe,EAAA;ECTG,EDSlB,CCTqB,EAAE,CDSvB,CAAA,IAAI,GAAJ,IAAI;ACTqB,CAAE,CAAC,EDOhD,IAAA,CAAA,MAAM,GAAkC,CAAA,CAAE;ACL5C,EDOwC,ECPpC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EAChB,ADQA,IAAA,CAAA,ECRO,CAAC,GAAG,CAAC,EDQZ,CAAA,GAAG,GAAH,CCRsB,CAAC,QDQnB,QAAgB,EAAA;ACPtB,CAAC,CAAC,EDQE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;ACP9B,EDQE,CAAC,CCRC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EAChB,ADSA,IAAA,CAAA,ECTO,CAAC,GAAG,CAAC,EDSZ,CAAA,GAAG,GAAH,CCTsB,CAAC,QDSnB,MAAiB,EAAA;ACRvB,CAAC,CAAC,EDSE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;ACRpC,EDSE,CAAC,CCTC,CAAC,EAAE,CAAC,MAAM,EAAE,YAAA;EACd,ADUA,IAAA,CAAA,ECVO,CAAC,GAAG,CAAC,EDUZ,CAAA,EAAE,GAAF,QCV4B,CAAC,CDU1B,SAAiB,EAAE,QAAkB,EAAA;ACT1C,CAAC,CAAC,EDUE,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;ACRjD,IAAI,ADSA,CCTC,OAAO,ADSA,CCTC,ADSA,IAAI,CAAC,GCTG,CAAC,IDSI,CAAC;ACR3B,IAAI,ADSA,CCTC,GDSG,CAAC,GCTG,CAAC,EDSE,CAAC,SAAS,CAAC,CCTC,CAAC,CDSC,QAAQ;EACnC,CAAC;EAED,IAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,SAAiB,EAAA;IACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IAEvC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;MACtC;;IAGF,QAAQ,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAA;MACxB,QAAQ,CAAA,CAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EACH,OAAA,IAAC;AAAD,CA9BA,CAAA,CAAA;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\n//type alias\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): number | string {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach((callback) => {\n      callback();\n    });\n  }\n}\n","import { User } from \"./models/user\";\n\nconst user = new User({ name: \"rafida\", age: 25 });\n\nuser.on(\"change\", () => {\n  console.log(\"Change 1\");\n});\nuser.on(\"change\", () => {\n  console.log(\"Change 2\");\n});\nuser.on(\"save\", () => {\n  console.log(\"save triggered\");\n});\n\nuser.trigger('change')\nuser.trigger('asdfasdfasdf')"]}